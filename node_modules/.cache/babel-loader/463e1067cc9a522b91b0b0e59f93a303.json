{"ast":null,"code":"import { get } from 'lodash';\nimport { createSelector } from 'reselect';\n\nvar account = function account(state) {\n  return get(state, 'web3.account');\n};\n\nexport var accountSelector = createSelector(account, function (a) {\n  return a;\n});\n\nvar tokenLoaded = function tokenLoaded(state) {\n  return get(state, 'token.loaded', false);\n};\n\nexport var tokenLoadedSelector = createSelector(tokenLoaded, function (tl) {\n  return tl;\n});\n\nvar exchangeLoaded = function exchangeLoaded(state) {\n  return get(state, 'exchange.loaded', false);\n};\n\nexport var exchangeLoadedSelector = createSelector(exchangeLoaded, function (el) {\n  return el;\n});\n\nvar exchange = function exchange(state) {\n  return get(state, 'exchange.contract');\n};\n\nexport var exchangeSelector = createSelector(exchange, function (e) {\n  return e;\n});\nexport var contractsLoadedSelector = createSelector(tokenLoaded, exchangeLoaded, function (tl, el) {\n  return tl && el;\n});\n\nvar filledOrdersLoaded = function filledOrdersLoaded(state) {\n  return get(state, 'exchange.filledOrders.loaded', false);\n};\n\nexport var filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, function (loaded) {\n  return loaded;\n});\n\nvar filledOrders = function filledOrders(state) {\n  return get(state, 'exchange.filledOrders.data', []);\n};\n\nexport var filledOrdersSelector = createSelector(filledOrders, function (orders) {\n  //Decorate the orders\n  orders = decorateFilledOrders(orders); //Sort orders by date descending\n\n  orders = orders.sort(function (a, b) {\n    return b.timestamp - a.timestamp;\n  });\n  console.log(orders);\n});\n\nvar decorateFilledOrders = function decorateFilledOrders(orders) {\n  return orders.map(function (order) {\n    order = decorateOrder(order);\n  });\n};\n\nvar decorateOrder = function decorateOrder(order) {\n  return order;\n};","map":{"version":3,"sources":["/home/mitch/code/blockchain-developer-bootcamp/src/store/selectors.js"],"names":["get","createSelector","account","state","accountSelector","a","tokenLoaded","tokenLoadedSelector","tl","exchangeLoaded","exchangeLoadedSelector","el","exchange","exchangeSelector","e","contractsLoadedSelector","filledOrdersLoaded","filledOrdersLoadedSelector","loaded","filledOrders","filledOrdersSelector","orders","decorateFilledOrders","sort","b","timestamp","console","log","map","order","decorateOrder"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,cAAR,CAAP;AAAA,CAArB;;AACA,OAAO,IAAMC,eAAe,GAAGH,cAAc,CAACC,OAAD,EAAU,UAAAG,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAX,CAAtC;;AAEP,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAH,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,cAAR,EAAwB,KAAxB,CAAP;AAAA,CAAzB;;AACA,OAAO,IAAMI,mBAAmB,GAAGN,cAAc,CAACK,WAAD,EAAc,UAAAE,EAAE;AAAA,SAAIA,EAAJ;AAAA,CAAhB,CAA1C;;AAEP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAN,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,iBAAR,EAA2B,KAA3B,CAAP;AAAA,CAA5B;;AACA,OAAO,IAAMO,sBAAsB,GAAGT,cAAc,CAACQ,cAAD,EAAiB,UAAAE,EAAE;AAAA,SAAIA,EAAJ;AAAA,CAAnB,CAA7C;;AAEP,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAT,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,mBAAR,CAAP;AAAA,CAAtB;;AACA,OAAO,IAAMU,gBAAgB,GAAGZ,cAAc,CAACW,QAAD,EAAW,UAAAE,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAZ,CAAvC;AAEP,OAAO,IAAMC,uBAAuB,GAAGd,cAAc,CACpDK,WADoD,EAEpDG,cAFoD,EAGpD,UAACD,EAAD,EAAKG,EAAL;AAAA,SAAaH,EAAE,IAAIG,EAAnB;AAAA,CAHoD,CAA9C;;AAMP,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAb,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,8BAAR,EAAwC,KAAxC,CAAP;AAAA,CAAhC;;AACA,OAAO,IAAMc,0BAA0B,GAAGhB,cAAc,CAACe,kBAAD,EAAqB,UAAAE,MAAM;AAAA,SAAIA,MAAJ;AAAA,CAA3B,CAAjD;;AAEP,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAhB,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,4BAAR,EAAsC,EAAtC,CAAP;AAAA,CAA1B;;AACA,OAAO,IAAMiB,oBAAoB,GAAGnB,cAAc,CACjDkB,YADiD,EAEjD,UAACE,MAAD,EAAY;AACX;AACAA,EAAAA,MAAM,GAAGC,oBAAoB,CAACD,MAAD,CAA7B,CAFW,CAIX;;AACAA,EAAAA,MAAM,GAAGA,MAAM,CAACE,IAAP,CAAY,UAAClB,CAAD,EAAGmB,CAAH;AAAA,WAASA,CAAC,CAACC,SAAF,GAAcpB,CAAC,CAACoB,SAAzB;AAAA,GAAZ,CAAT;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,CATgD,CAA3C;;AAYP,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACD,MAAD,EAAY;AACxC,SACCA,MAAM,CAACO,GAAP,CAAW,UAACC,KAAD,EAAW;AACrBA,IAAAA,KAAK,GAAGC,aAAa,CAACD,KAAD,CAArB;AACA,GAFD,CADD;AAKA,CAND;;AAQA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACD,KAAD,EAAW;AAChC,SAAOA,KAAP;AACA,CAFD","sourcesContent":["import { get } from 'lodash'\nimport { createSelector } from 'reselect'\n\nconst account = state => get(state, 'web3.account')\nexport const accountSelector = createSelector(account, a => a)\n\nconst tokenLoaded = state => get(state, 'token.loaded', false)\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tl => tl)\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false)\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, el => el)\n\nconst exchange = state => get(state, 'exchange.contract')\nexport const exchangeSelector = createSelector(exchange, e => e)\n\nexport const contractsLoadedSelector = createSelector(\n\ttokenLoaded,\n\texchangeLoaded,\n\t(tl, el) => (tl && el)\n)\n\nconst filledOrdersLoaded = state => get(state, 'exchange.filledOrders.loaded', false)\nexport const filledOrdersLoadedSelector = createSelector(filledOrdersLoaded, loaded => loaded)\n\nconst filledOrders = state => get(state, 'exchange.filledOrders.data', [])\nexport const filledOrdersSelector = createSelector(\n\tfilledOrders,\n\t(orders) => {\n\t\t//Decorate the orders\n\t\torders = decorateFilledOrders(orders)\n\t\t\n\t\t//Sort orders by date descending\n\t\torders = orders.sort((a,b) => b.timestamp - a.timestamp)\n\t\tconsole.log(orders)\n\t}\n)\n\nconst decorateFilledOrders = (orders) => {\n\treturn(\n\t\torders.map((order) => {\n\t\t\torder = decorateOrder(order)\n\t\t})\n\t)\n}\n\nconst decorateOrder = (order) => {\n\treturn order\n}"]},"metadata":{},"sourceType":"module"}