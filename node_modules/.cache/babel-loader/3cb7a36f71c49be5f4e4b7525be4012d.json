{"ast":null,"code":"import _regeneratorRuntime from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/mitch/code/blockchain-developer-bootcamp/src/components/Balance.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadBalances } from '../store/interactions';\nimport { web3Selector, exchangeSelector, tokenSelector, accountSelector, etherBalanceSelector, tokenBalanceSelector, exchangeEtherBalanceSelector, exchangeTokenBalanceSelector, balancesLoadingSelector } from '../store/selectors';\n\nvar Balance = /*#__PURE__*/function (_Component) {\n  _inherits(Balance, _Component);\n\n  var _super = _createSuper(Balance);\n\n  function Balance() {\n    _classCallCheck(this, Balance);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Balance, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.loadBlockchainData();\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this$props, dispatch, web3, exchange, token, account;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, dispatch = _this$props.dispatch, web3 = _this$props.web3, exchange = _this$props.exchange, token = _this$props.token, account = _this$props.account;\n                _context.next = 3;\n                return loadBalances(dispatch, web3, exchange, token, account);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card bg-dark text-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }\n      }, \"Balance\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return Balance;\n}(Component);\n\nfunction mapStateToProps(state) {\n  console.log({\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n    exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n    balancesLoading: balancesLoadingSelector(state)\n  });\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n    exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n    balancesLoading: balancesLoadingSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps)(Balance);","map":{"version":3,"sources":["/home/mitch/code/blockchain-developer-bootcamp/src/components/Balance.js"],"names":["React","Component","connect","loadBalances","web3Selector","exchangeSelector","tokenSelector","accountSelector","etherBalanceSelector","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","balancesLoadingSelector","Balance","loadBlockchainData","props","dispatch","web3","exchange","token","account","mapStateToProps","state","console","log","etherBalance","tokenBalance","exchangeEtherBalance","exchangeTokenBalance","balancesLoading"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SACCC,YADD,EAECC,gBAFD,EAGCC,aAHD,EAICC,eAJD,EAKCC,oBALD,EAMCC,oBAND,EAOCC,4BAPD,EAQCC,4BARD,EASCC,uBATD,QAUO,oBAVP;;IAYMC,O;;;;;;;;;;;;;gDACuB;AACzB,WAAKC,kBAAL;AACD;;;;;;;;;;;8BAGsD,KAAKC,K,EAAlDC,Q,eAAAA,Q,EAAUC,I,eAAAA,I,EAAMC,Q,eAAAA,Q,EAAUC,K,eAAAA,K,EAAOC,O,eAAAA,O;;uBACnCjB,YAAY,CAACa,QAAD,EAAWC,IAAX,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCC,OAAlC,C;;;;;;;;;;;;;;;;;;6BAGZ;AACR,0BACC;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,eAIC;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJD,CADD;AAUA;;;;EArBoBnB,S;;AAwBtB,SAASoB,eAAT,CAAyBC,KAAzB,EAAgC;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY;AACXJ,IAAAA,OAAO,EAAEb,eAAe,CAACe,KAAD,CADb;AAEXJ,IAAAA,QAAQ,EAAEb,gBAAgB,CAACiB,KAAD,CAFf;AAGXH,IAAAA,KAAK,EAAEb,aAAa,CAACgB,KAAD,CAHT;AAIXL,IAAAA,IAAI,EAAEb,YAAY,CAACkB,KAAD,CAJP;AAKXG,IAAAA,YAAY,EAAEjB,oBAAoB,CAACc,KAAD,CALvB;AAMXI,IAAAA,YAAY,EAAEjB,oBAAoB,CAACa,KAAD,CANvB;AAOXK,IAAAA,oBAAoB,EAAEjB,4BAA4B,CAACY,KAAD,CAPvC;AAQXM,IAAAA,oBAAoB,EAAEjB,4BAA4B,CAACW,KAAD,CARvC;AASXO,IAAAA,eAAe,EAAEjB,uBAAuB,CAACU,KAAD;AAT7B,GAAZ;AAYA,SAAO;AACNF,IAAAA,OAAO,EAAEb,eAAe,CAACe,KAAD,CADlB;AAENJ,IAAAA,QAAQ,EAAEb,gBAAgB,CAACiB,KAAD,CAFpB;AAGNH,IAAAA,KAAK,EAAEb,aAAa,CAACgB,KAAD,CAHd;AAINL,IAAAA,IAAI,EAAEb,YAAY,CAACkB,KAAD,CAJZ;AAKNG,IAAAA,YAAY,EAAEjB,oBAAoB,CAACc,KAAD,CAL5B;AAMNI,IAAAA,YAAY,EAAEjB,oBAAoB,CAACa,KAAD,CAN5B;AAONK,IAAAA,oBAAoB,EAAEjB,4BAA4B,CAACY,KAAD,CAP5C;AAQNM,IAAAA,oBAAoB,EAAEjB,4BAA4B,CAACW,KAAD,CAR5C;AASNO,IAAAA,eAAe,EAAEjB,uBAAuB,CAACU,KAAD;AATlC,GAAP;AAWA;;AAED,eAAepB,OAAO,CAACmB,eAAD,CAAP,CAAyBR,OAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { loadBalances } from '../store/interactions'\nimport {\n\tweb3Selector,\n\texchangeSelector,\n\ttokenSelector,\n\taccountSelector,\n\tetherBalanceSelector,\n\ttokenBalanceSelector,\n\texchangeEtherBalanceSelector,\n\texchangeTokenBalanceSelector,\n\tbalancesLoadingSelector\n} from '../store/selectors'\n\nclass Balance extends Component {\n\tUNSAFE_componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const { dispatch, web3, exchange, token, account } = this.props\n    await loadBalances(dispatch, web3, exchange, token, account)\n  }\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"card bg-dark text-white\">\n\t\t\t\t<div className=\"card-header\">\n\t\t\t\t\tBalance\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card-body\">\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps(state) {\n\tconsole.log({\n\t\taccount: accountSelector(state),\n\t\texchange: exchangeSelector(state),\n\t\ttoken: tokenSelector(state),\n\t\tweb3: web3Selector(state),\n\t\tetherBalance: etherBalanceSelector(state),\n\t\ttokenBalance: tokenBalanceSelector(state),\n\t\texchangeEtherBalance: exchangeEtherBalanceSelector(state),\n\t\texchangeTokenBalance: exchangeTokenBalanceSelector(state),\n\t\tbalancesLoading: balancesLoadingSelector(state)\n\t})\n\n\treturn {\n\t\taccount: accountSelector(state),\n\t\texchange: exchangeSelector(state),\n\t\ttoken: tokenSelector(state),\n\t\tweb3: web3Selector(state),\n\t\tetherBalance: etherBalanceSelector(state),\n\t\ttokenBalance: tokenBalanceSelector(state),\n\t\texchangeEtherBalance: exchangeEtherBalanceSelector(state),\n\t\texchangeTokenBalance: exchangeTokenBalanceSelector(state),\n\t\tbalancesLoading: balancesLoadingSelector(state)\n\t}\n}\n\nexport default connect(mapStateToProps)(Balance)"]},"metadata":{},"sourceType":"module"}