{"ast":null,"code":"import _regeneratorRuntime from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nimport { web3Loaded, web3AccountLoaded } from './actions'; //ethereum.enable()\n\nexport var loadWeb3 = function loadWeb3(dispatch) {\n  var web3 = new Web3(window.ethereum);\n  window.ethereum.enable();\n  dispatch(web3Loaded(web3));\n  return web3;\n};\nexport var loadAccount = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(web3, dispatch) {\n    var accounts, account;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"web3: \", web3);\n            _context.next = 3;\n            return web3.eth.getAccounts();\n\n          case 3:\n            accounts = _context.sent;\n            account = accounts[0];\n            dispatch(web3AccountLoaded(account));\n            return _context.abrupt(\"return\", account);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loadAccount(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); // export const loadAccount = async (web3, dispatch) => {\n// \tconst accounts = await web3.eth.getAccounts()\n// \tconst account = accounts[0]\n// \tdispatch(web3AccountLoaded(account))\n// \treturn account\n// }","map":{"version":3,"sources":["/home/mitch/code/blockchain-developer-bootcamp/src/store/interactions.js"],"names":["Web3","web3Loaded","web3AccountLoaded","loadWeb3","dispatch","web3","window","ethereum","enable","loadAccount","console","log","eth","getAccounts","accounts","account"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SACCC,UADD,EAECC,iBAFD,QAGO,WAHP,C,CAKA;;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AACrC,MAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASM,MAAM,CAACC,QAAhB,CAAb;AACAD,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAJ,EAAAA,QAAQ,CAACH,UAAU,CAACI,IAAD,CAAX,CAAR;AACA,SAAOA,IAAP;AACA,CALM;AAOP,OAAO,IAAMI,WAAW;AAAA,sEAAG,iBAAOJ,IAAP,EAAaD,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BM,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,IAAtB;AAD0B;AAAA,mBAEHA,IAAI,CAACO,GAAL,CAASC,WAAT,EAFG;;AAAA;AAEpBC,YAAAA,QAFoB;AAGpBC,YAAAA,OAHoB,GAGVD,QAAQ,CAAC,CAAD,CAHE;AAI1BV,YAAAA,QAAQ,CAACF,iBAAiB,CAACa,OAAD,CAAlB,CAAR;AAJ0B,6CAKnBA,OALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXN,WAAW;AAAA;AAAA;AAAA,GAAjB,C,CAQP;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Web3 from 'web3'\nimport { \n\tweb3Loaded,\n\tweb3AccountLoaded\n} from './actions'\n\n//ethereum.enable()\n\nexport const loadWeb3 = (dispatch) => {\n\tconst web3 = new Web3(window.ethereum)\n\twindow.ethereum.enable()\n\tdispatch(web3Loaded(web3))\n\treturn web3\n}\n\nexport const loadAccount = async (web3, dispatch) => {\n\tconsole.log(\"web3: \", web3)\n\tconst accounts = await web3.eth.getAccounts()\n\tconst account = accounts[0]\n\tdispatch(web3AccountLoaded(account))\n\treturn account\n}\n\n// export const loadAccount = async (web3, dispatch) => {\n// \tconst accounts = await web3.eth.getAccounts()\n// \tconst account = accounts[0]\n// \tdispatch(web3AccountLoaded(account))\n// \treturn account\n// }"]},"metadata":{},"sourceType":"module"}