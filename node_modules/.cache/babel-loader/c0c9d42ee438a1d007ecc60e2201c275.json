{"ast":null,"code":"import _regeneratorRuntime from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/mitch/code/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/mitch/code/blockchain-developer-bootcamp/src/components/Balance.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from './Spinner';\nimport { loadBalances } from '../store/interactions';\nimport { web3Selector, exchangeSelector, tokenSelector, accountSelector, etherBalanceSelector, tokenBalanceSelector, exchangeEtherBalanceSelector, exchangeTokenBalanceSelector, balancesLoadingSelector } from '../store/selectors';\n\nvar showForm = function showForm(props) {\n  return /*#__PURE__*/function (_Component) {\n    _inherits(Balance, _Component);\n\n    var _super = _createSuper(Balance);\n\n    function Balance() {\n      _classCallCheck(this, Balance);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Balance, [{\n      key: \"UNSAFE_componentWillMount\",\n      value: function UNSAFE_componentWillMount() {\n        this.loadBlockchainData();\n      }\n    }, {\n      key: \"loadBlockchainData\",\n      value: function () {\n        var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _this$props, dispatch, web3, exchange, token, account;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this$props = this.props, dispatch = _this$props.dispatch, web3 = _this$props.web3, exchange = _this$props.exchange, token = _this$props.token, account = _this$props.account;\n                  _context.next = 3;\n                  return loadBalances(dispatch, web3, exchange, token, account);\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function loadBlockchainData() {\n          return _loadBlockchainData.apply(this, arguments);\n        }\n\n        return loadBlockchainData;\n      }()\n    }, {\n      key: \"render\",\n      value: function render() {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card bg-dark text-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 4\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 5\n          }\n        }, \"Balance\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 5\n          }\n        }));\n      }\n    }]);\n\n    return Balance;\n  }(Component);\n};\n\nfunction mapStateToProps(state) {\n  var balancesLoading = balancesLoadingSelector(state);\n  return {\n    account: accountSelector(state),\n    exchange: exchangeSelector(state),\n    token: tokenSelector(state),\n    web3: web3Selector(state),\n    etherBalance: etherBalanceSelector(state),\n    tokenBalance: tokenBalanceSelector(state),\n    exchangeEtherBalance: exchangeEtherBalanceSelector(state),\n    exchangeTokenBalance: exchangeTokenBalanceSelector(state),\n    balancesLoading,\n    showForm: !balancesLoading\n  };\n}\n\nexport default connect(mapStateToProps)(Balance);","map":{"version":3,"sources":["/home/mitch/code/blockchain-developer-bootcamp/src/components/Balance.js"],"names":["React","Component","connect","Spinner","loadBalances","web3Selector","exchangeSelector","tokenSelector","accountSelector","etherBalanceSelector","tokenBalanceSelector","exchangeEtherBalanceSelector","exchangeTokenBalanceSelector","balancesLoadingSelector","showForm","props","loadBlockchainData","dispatch","web3","exchange","token","account","mapStateToProps","state","balancesLoading","etherBalance","tokenBalance","exchangeEtherBalance","exchangeTokenBalance","Balance"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SACCC,YADD,EAECC,gBAFD,EAGCC,aAHD,EAICC,eAJD,EAKCC,oBALD,EAMCC,oBAND,EAOCC,4BAPD,EAQCC,4BARD,EASCC,uBATD,QAUO,oBAVP;;AAYA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,kDAGY;AACzB,aAAKC,kBAAL;AACD;AALc;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCAQwC,KAAKD,KAR7C,EAQLE,QARK,eAQLA,QARK,EAQKC,IARL,eAQKA,IARL,EAQWC,QARX,eAQWA,QARX,EAQqBC,KARrB,eAQqBA,KARrB,EAQ4BC,OAR5B,eAQ4BA,OAR5B;AAAA;AAAA,yBASPjB,YAAY,CAACa,QAAD,EAAWC,IAAX,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCC,OAAlC,CATL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+BAYP;AACR,4BACC;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAIC;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJD,CADD;AAUA;AAvBe;;AAAA;AAAA,IAEKpB,SAFL;AAAA,CAAjB;;AA0BA,SAASqB,eAAT,CAAyBC,KAAzB,EAAgC;AAC/B,MAAMC,eAAe,GAAGX,uBAAuB,CAACU,KAAD,CAA/C;AAEA,SAAO;AACNF,IAAAA,OAAO,EAAEb,eAAe,CAACe,KAAD,CADlB;AAENJ,IAAAA,QAAQ,EAAEb,gBAAgB,CAACiB,KAAD,CAFpB;AAGNH,IAAAA,KAAK,EAAEb,aAAa,CAACgB,KAAD,CAHd;AAINL,IAAAA,IAAI,EAAEb,YAAY,CAACkB,KAAD,CAJZ;AAKNE,IAAAA,YAAY,EAAEhB,oBAAoB,CAACc,KAAD,CAL5B;AAMNG,IAAAA,YAAY,EAAEhB,oBAAoB,CAACa,KAAD,CAN5B;AAONI,IAAAA,oBAAoB,EAAEhB,4BAA4B,CAACY,KAAD,CAP5C;AAQNK,IAAAA,oBAAoB,EAAEhB,4BAA4B,CAACW,KAAD,CAR5C;AASNC,IAAAA,eATM;AAUNV,IAAAA,QAAQ,EAAE,CAACU;AAVL,GAAP;AAYA;;AAED,eAAetB,OAAO,CAACoB,eAAD,CAAP,CAAyBO,OAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Spinner from './Spinner'\nimport { loadBalances } from '../store/interactions'\nimport {\n\tweb3Selector,\n\texchangeSelector,\n\ttokenSelector,\n\taccountSelector,\n\tetherBalanceSelector,\n\ttokenBalanceSelector,\n\texchangeEtherBalanceSelector,\n\texchangeTokenBalanceSelector,\n\tbalancesLoadingSelector\n} from '../store/selectors'\n\nconst showForm = (props) => \n\nclass Balance extends Component {\n\tUNSAFE_componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const { dispatch, web3, exchange, token, account } = this.props\n    await loadBalances(dispatch, web3, exchange, token, account)\n  }\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"card bg-dark text-white\">\n\t\t\t\t<div className=\"card-header\">\n\t\t\t\t\tBalance\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card-body\">\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps(state) {\n\tconst balancesLoading = balancesLoadingSelector(state)\n\n\treturn {\n\t\taccount: accountSelector(state),\n\t\texchange: exchangeSelector(state),\n\t\ttoken: tokenSelector(state),\n\t\tweb3: web3Selector(state),\n\t\tetherBalance: etherBalanceSelector(state),\n\t\ttokenBalance: tokenBalanceSelector(state),\n\t\texchangeEtherBalance: exchangeEtherBalanceSelector(state),\n\t\texchangeTokenBalance: exchangeTokenBalanceSelector(state),\n\t\tbalancesLoading,\n\t\tshowForm: !balancesLoading\n\t}\n}\n\nexport default connect(mapStateToProps)(Balance)"]},"metadata":{},"sourceType":"module"}